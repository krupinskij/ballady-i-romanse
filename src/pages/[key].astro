---
import type { Ballad, BalladInfo } from '@model';
import Layout from '@layouts/Layout.astro';
import Motto from '@components/Motto.astro';
import Note from '@components/Note.astro';
import Content from '@components/Content.astro';

const { key } = Astro.params;

const ballad: Ballad = await (await fetch(`http://localhost:4321/api/ballads/${key}.json`)).json();
const { title, prev, next, notes, motto, contents } = ballad;

export async function getStaticPaths() {
  const ballads: BalladInfo[] = [
    { key: 'pierwiosnek', title: 'Pierwiosnek' },
    { key: 'romantycznosc', title: 'Romantyczność' },
    { key: 'switez', title: 'Świteź' },
    { key: 'switezianka', title: 'Świtezianka' },
    { key: 'rybka', title: 'Rybka' },
    { key: 'powrot-taty', title: 'Powrót taty' },
    { key: 'kurhanek-maryli', title: 'Kurhanek Maryli' },
    { key: 'do-przyjaciol', title: 'Do przyjaciół' },
    { key: 'to-lubie', title: 'To lubię' },
    { key: 'rekawiczka', title: 'Rękawiczka' },
    { key: 'pani-twardowska', title: 'Pani Twardowska' },
    { key: 'tukaj-albo-proby-przyjazni', title: 'Tukaj albo próby przyjaźni' },
    { key: 'lilije', title: 'Lilije' },
    { key: 'dudarz', title: 'Dudarz' },
  ];
  // const ballads: BalladInfo[] = await (
  //   await fetch('http://localhost:4321/api/ballads/list.json')
  // ).json();

  return ballads.map((ballad) => ({
    params: { key: ballad.key },
  }));
}
---

<Layout title={`${title} | Ballady i Romanse`}>
  <header>
    <h1>{title}</h1>
    <nav>
      <span>
        {
          prev && (
            <a href={`/${prev.key}`} style={{ textAlign: 'left' }}>
              ⬅<span> {prev.title}</span>
            </a>
          )
        }
      </span>
      <a href="/" style={{ textAlign: 'center' }}>⌂ <span>Strona główna</span></a>
      <span>
        {
          next && (
            <a href={`/${next.key}`} style={{ textAlign: 'right' }}>
              <span>{next.title} </span>➡
            </a>
          )
        }
      </span>
    </nav>
    {notes && notes.map(({ text }) => <Note note={text} />)}
  </header>
  <main>
    <article>
      {motto && <Motto {...motto} />}
      {contents.map((content) => <Content {...content} />)}
    </article>
  </main>
  <pre>
    {JSON.stringify(ballad, null, 2)}
  </pre>
</Layout>

<style lang="scss">
  header {
    margin-bottom: 32px;
  }

  h1 {
    font: var(--font-xxl);
    font-family: var(--font-cursive);
    text-align: center;
  }

  h2 {
    font-weight: 500;
  }

  nav {
    position: fixed;
    inset: 0 0 auto 0;
    padding: 8px 16px;

    background-color: var(--bg-color-default);

    display: grid;
    grid-template-columns: 1fr 1fr 1fr;

    & a {
      display: inline-block;
      width: 100%;

      font: var(--font-md);
      text-wrap: nowrap;

      &:hover {
        text-decoration: underline;
      }

      & > span {
        display: none;
        @media (min-width: 640px) {
          display: inline;
        }
      }
    }
  }

  article {
    width: max-content;
    margin-inline: auto;
  }
</style>
